package net.minecraft.src;

public class GuiControls extends GuiScreen {
	private GuiScreen parentScreen;
	protected String screenTitle = "Controls";
	private GameSettings options;
	private int buttonId = -1;

	public GuiControls(GuiScreen prevScreen, GameSettings gameSettings) {
		this.parentScreen = prevScreen;
		this.options = gameSettings;
	}

	public void initGui() {
		this.controlList.clear();
		for (int i = 0; i < this.options.keyBindings.length; ++i) {
			this.controlList.add(new GuiSmallButton(i, this.width / 2 - 155 + i % 2 * 160, this.height / 6 + 24 * (i >> 1), this.options.getKeyBindingDescription(i)));
		}

		this.controlList.add(new GuiButton(200, this.width / 2 - 100, this.height / 6 + 168, "Done"));
	}

	protected void actionPerformed(GuiButton button) {
		for (int i = 0; i < this.options.keyBindings.length; ++i) {
			((GuiButton)this.controlList.get(i)).displayString = this.options.getKeyBindingDescription(i);
		}

		if (button.id == 200) {
			this.mc.displayGuiScreen(this.parentScreen);
		} else {
			this.buttonId = button.id;
			button.displayString = "> " + this.options.getKeyBindingDescription(button.id) + " <";
		}
	}

	protected void keyTyped(char character, int key) {
		if (this.buttonId >= 0) {
			this.options.setKeyBinding(this.buttonId, key);
			((GuiButton)this.controlList.get(this.buttonId)).displayString = this.options.getKeyBindingDescription(this.buttonId);
			this.buttonId = -1;
		} else {
			super.keyTyped(character, key);
		}
	}

	public void drawScreen(int mouseX, int mouseY, float renderPartialTick) {
		// No background drawing
		this.drawCenteredString(this.fontRenderer, this.screenTitle, this.width / 2, 20, 0xFFFFFF);
		super.drawScreen(mouseX, mouseY, renderPartialTick);
	}
}
