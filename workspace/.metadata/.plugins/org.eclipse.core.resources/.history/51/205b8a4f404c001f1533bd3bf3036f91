package net.minecraft.client.gui;

import net.minecraft.client.GameSettings;
import net.minecraft.client.gui.widget.button.Button;

public final class GuiControls extends GuiScreen {

    private final GuiScreen parentScreen;
    private final GameSettings options;
    private String screenTitle = "Controls";
    private int buttonId = -1;

    public GuiControls(GuiScreen parentScreen, GameSettings options) {
        this.parentScreen = parentScreen;
        this.options = options;
    }

    public final void initGui() {
        this.controlList.clear(); // Clear any existing buttons

        // Add key binding buttons
        for (int i = 0; i < this.options.keyBindings.length; ++i) {
            this.controlList.add(new GuiButton(i, this.width / 2 - 155 + i % 2 * 160, this.height / 6 + 24 * (i >> 1), 150, 20, this.options.getKeyBindingString(i)));
        }

        // Add "Done" button
        this.controlList.add(new GuiButton(200, this.width / 2 - 100, this.height / 6 + 168, 200, 20, "Done"));
    }

    protected final void actionPerformed(Button button) {

        if (button.id == 200) { // "Done" button
            this.mc.displayGuiScreen(this.parentScreen);
            return;
        }

        // Set the current button ID and update its display string
        this.buttonId = button.id;
        for (int i = 0; i < this.options.keyBindings.length; i++) {
            ((GuiButton) this.controlList.get(i)).displayString = this.options.getKeyBindingString(i);
        }
        ((GuiButton) button).displayString = "> " + this.options.getKeyBindingString(button.id) + " <";
    }

    protected final void keyTyped(char character, int keycode) {

        if (this.buttonId >= 0) {
            // Set the key binding for the selected button
            this.options.setKeyBinding(this.buttonId, keycode);
            ((GuiButton) this.controlList.get(this.buttonId)).displayString = this.options.getKeyBindingString(this.buttonId);
            this.buttonId = -1;
        } else {
            super.keyTyped(character, keycode);
        }
    }

    public final void drawScreen(int mouseX, int mouseY, float partialTicks) {
        this.drawDefaultBackground();
        this.drawCenteredString(this.fontRenderer, this.screenTitle, this.width / 2, 20, 16777215);

        super.drawScreen(mouseX, mouseY, partialTicks);
    }
}
