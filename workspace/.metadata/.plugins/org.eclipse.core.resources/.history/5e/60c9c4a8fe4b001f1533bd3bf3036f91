package net.minecraft.client.gui;

public final class GuiIngameMenu extends GuiScreen {

    private boolean shouldPrompt = true;

    @Override
    public void initGui() {
        this.controlList.clear();
        this.controlList.add(new GuiButtonText(0, this.width / 2 - 100, this.height / 4 + 24, "Options..."));
        this.controlList.add(new GuiButtonText(1, this.width / 2 - 100, this.height / 4 + 48, "Generate new level..."));
        this.controlList.add(new GuiButtonText(2, this.width / 2 - 100, this.height / 4 + 72, 98, 20, "Save level.."));
        this.controlList.add(new GuiButtonText(3, this.width / 2 + 2, this.height / 4 + 72, 98, 20, "Load level.."));
        this.controlList.add(new GuiButtonText(4, this.width / 2 - 100, this.height / 4, "Back to game"));
        this.controlList.add(new GuiButtonText(5, this.width / 2 - 100, this.height / 4 + 120, "Exit to main menu"));

        if (this.mc.session == null) {
            ((GuiButtonText) this.controlList.get(2)).enabled = false;
            ((GuiButtonText) this.controlList.get(3)).enabled = false;
        }

        // Check if the choice should be remembered
        File optionsFile = new File(this.mc.mcDataDir, "options.txt");
        try (Scanner scanner = new Scanner(optionsFile)) {
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                if (line.equals("remember_exit_choice=true")) {
                    shouldPrompt = false;
                    break;
                }
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }

    @Override
    protected void actionPerformed(GuiButton button) {
        switch (button.id) {
            case 0:
                this.mc.displayGuiScreen(new GuiOptions(this, this.mc.options));
                break;

            case 1:
                this.mc.displayGuiScreen(new GuiNewLevel(this));
                break;

            case 2:
                if (this.mc.session != null) {
                    this.mc.displayGuiScreen(new GuiSaveLevel(this));
                }
                break;

            case 3:
                if (this.mc.session != null) {
                    this.mc.displayGuiScreen(new GuiLoadLevel(this));
                }
                break;

            case 4:
                this.mc.displayGuiScreen(null);
                this.mc.setIngameFocus();
                break;

            case 5:
                if (shouldPrompt) {
                    // Show confirmation screen
                    this.mc.displayGuiScreen(new GuiConfirmationScreen(this));
                } else {
                    // Exit to main menu immediately
                    this.mc.theWorld = null;
                    this.mc.displayGuiScreen(null);
                }
                break;
        }
    }

    @Override
    public void drawScreen(int mouseX, int mouseY, float partialTicks) {
        this.drawDefaultBackground();
        drawCenteredString(this.fontRenderer, "Game menu", this.width / 2, 40, 16777215);
        super.drawScreen(mouseX, mouseY, partialTicks);
    }
}
