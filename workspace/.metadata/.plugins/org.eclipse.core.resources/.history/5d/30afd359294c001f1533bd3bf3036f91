package net.minecraft.client;

import java.awt.Frame;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.DisplayMode;

public class EnhancedMinecraft {
    private Minecraft mc;
    private Frame mcFrame;
    private GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();

    // Enum for screen modes
    public enum ScreenMode {
        FULLSCREEN, BORDERLESS
    }

    ScreenMode currentMode = ScreenMode.FULLSCREEN;

    public EnhancedMinecraft(Minecraft mc, Frame frame) {
        this.mc = mc;
        this.mcFrame = frame;
    }

    public void toggleFullscreen() {
        try {
            if (currentMode != ScreenMode.FULLSCREEN) {
                Display.setDisplayMode(Display.getDesktopDisplayMode());
                Display.setFullscreen(true);
                currentMode = ScreenMode.FULLSCREEN;
            } else {
                Display.setFullscreen(false);
                Display.setDisplayMode(new DisplayMode(mc.tempDisplayWidth, mc.tempDisplayHeight));
                currentMode = ScreenMode.BORDERLESS;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void toggleBorderlessWindow() {
        try {
            if (currentMode != ScreenMode.BORDERLESS) {
                Display.setFullscreen(false);
                mcFrame.dispose();
                mcFrame.setUndecorated(true);
                mcFrame.setResizable(false);
                Rectangle screenBounds = gd.getDefaultConfiguration().getBounds();
                mcFrame.setBounds(screenBounds);
                mcFrame.setVisible(true);
                currentMode = ScreenMode.BORDERLESS;
            } else {
                mcFrame.dispose();
                mcFrame.setUndecorated(false);
                mcFrame.setSize(mc.tempDisplayWidth, mc.tempDisplayHeight);
                mcFrame.setResizable(true);
                mcFrame.setVisible(true);
                Display.setDisplayMode(new DisplayMode(mc.tempDisplayWidth, mc.tempDisplayHeight));
                currentMode = ScreenMode.FULLSCREEN;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void changeWindowMode(ScreenMode mode) {
        try {
            if (mode == ScreenMode.FULLSCREEN) {
                toggleFullscreen();
            } else if (mode == ScreenMode.BORDERLESS) {
                toggleBorderlessWindow();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
