import org.lwjgl.opengl.GL11;

import net.minecraft.client.render.Tessellator;

public final class GuiOptions extends GuiScreen {
    private String screenTitle;
    private GameSettings options;
    private int amountScrolled;
    private int top;
    private int bottom;
    private int left;
    private int right;
    private int initialClickY;
    
    public GuiOptions(GameSettings gameSettings) {
        this.screenTitle = "General";
        this.options = gameSettings;
        this.amountScrolled = 0;
        this.top = 32;
        this.bottom = this.height - 55 + 4;
        this.left = 0;
        this.right = this.width;
        this.initialClickY = -2;
    }
    
    @Override
    public final void initGui() {
        this.controlList.clear();
        this.controlList.add(new bl(101, this.width / 2 - 155, this.height / 6 + 24, "FOV", 0));
        this.controlList.add(new bl(104, this.width / 2 + 5, this.height / 6 + 24, "Sensitivity", 1));
        for (int i = 0; i < 6; ++i) {
            this.controlList.add(new GuiButton(i, this.width / 2 - 65 + i % 2 * 160, this.height / 6 + 24 + 24 * (i >> 1), 60, 20, this.options.setOptionString(i)));
        }
        this.controlList.add(new GuiButton(106, this.width / 2 - 30, this.height - 50, 60, 20, "Audio"));
        this.controlList.add(new GuiButton(105, this.width / 2 - 100, this.height - 50, 60, 20, "Graphics"));
        this.controlList.add(new GuiButton(100, this.width / 2 + 40, this.height - 50, 60, 20, "Controls"));
        this.controlList.add(new GuiButton(108, this.width / 2 + 110, this.height - 50, 60, 20, "Packs"));
        this.controlList.add(new GuiButton(200, this.width / 2 - 75, this.height - 25, 150, 20, "Done"));
        this.controlList.add(new GuiButton(107, this.width / 2 - 170, this.height - 50, 60, 20, "General"));
        this.top = 32;
        this.bottom = this.height - 58 + 2;
        this.left = 0;
        this.right = this.width;
        this.controlList.get(this.controlList.size() - 1).enabled = false;
    }
    
    @Override
    protected final void actionPerformed(GuiButton guiButton) {
        if (guiButton.enabled) {
            if (guiButton.id < 100) {
                this.options.setOptionValue(guiButton.id, 1);
                guiButton.displayString = this.options.setOptionString(guiButton.id);
            }
            if (guiButton.id == 100) {
                this.mc.displayGuiScreen(new GuiControls(this.options));
            }
            if (guiButton.id == 105) {
                this.mc.displayGuiScreen(new bv(this.options));
            }
            if (guiButton.id == 106) {
                this.mc.displayGuiScreen(new ad(this.options));
            }
            if (guiButton.id == 108) {
                this.mc.displayGuiScreen(new bu(this.options));
            }
            if (guiButton.id == 200) {
                if (this.mc.theWorld != null) {
                    this.mc.displayGuiScreen(new GuiIngameMenu());
                }
                else {
                    this.mc.displayGuiScreen(new at());
                }
            }
        }
    }
    
    @Override
    public void handleMouseInput() {
        super.handleMouseInput();
        if (Mouse.getEventDWheel() < 0.0f) {
            this.amountScrolled -= (int)(this.initialClickY * 10.0f);
        }
        else if (Mouse.getEventDWheel() > 0.0f) {
            this.amountScrolled += (int)(this.initialClickY * 10.0f);
        }
    }
    
    @Override
    public final void drawScreen(int xSize_lo, int ySize_lo, float float4) {
        if (this.mc.theWorld == null) {
            ScaledResolution scaledResolution5;
            int integer6 = (scaledResolution5 = new ScaledResolution(this.mc.gameSettings, this.mc.displayWidth, this.mc.displayHeight)).getScaledWidth();
            int integer7 = scaledResolution5.getScaledHeight();
            GL11.glClear(16640);
            Tessellator tessellator8 = Tessellator.instance;
            GL11.glBindTexture(3553, this.mc.renderEngine.getTexture("/dirt.png"));
            float float10 = 32.0f;
            tessellator8.startDrawingQuads();
            tessellator8.setColorOpaque_I(4210752);
            tessellator8.addVertexWithUV(0.0f, (float)integer7, 0.0f, 0.0f, integer7 / float10);
            tessellator8.addVertexWithUV((float)integer6, (float)integer7, 0.0f, integer6 / float10, integer7 / float10);
            tessellator8.addVertexWithUV((float)integer6, 0.0f, 0.0f, integer6 / float10, 0.0f);
            tessellator8.addVertexWithUV(0.0f, 0.0f, 0.0f, 0.0f, 0.0f);
            tessellator8.draw();
        }
        else {
            Gui.drawGradientRect(0, 0, this.width, this.height, 1610941696, -1607454624);
        }
        List<GuiButton> list5 = this.controlList;
        if (Mouse.isButtonDown(0)) {
            if (this.initialClickY == -1) {
                if (ySize_lo >= this.top && ySize_lo <= this.bottom) {
                    this.initialClickY = ySize_lo;
                }
                else {
                    this.initialClickY = -2;
                }
            }
            else if (this.initialClickY >= 0) {
                this.amountScrolled -= ySize_lo - this.initialClickY;
                this.initialClickY = ySize_lo;
            }
        }
        else {
            if (this.initialClickY < 0 || this.initialClickY != ySize_lo) {}
            this.initialClickY = -1;
        }
        int integer6 = 20;
        int integer7 = (list5.size() - 1) / 2 * integer6 - 1;
        int integer8 = integer7 - (this.bottom - 6 - (this.top + 6));
        if (integer8 < 0) {
            integer8 /= 2;
        }
        if (this.amountScrolled < 0) {
            this.amountScrolled = 0;
        }
        if (this.amountScrolled > integer8) {
            this.amountScrolled = integer8;
        }
        GL11.glDisable(2896);
        GL11.glDisable(2912);
        Tessellator tessellator9 = Tessellator.instance;
        GL11.glBindTexture(3553, this.mc.renderEngine.getTexture("/dirt.png"));
        GL11.glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
        float float10 = 32.0f;
        if (this.mc.theWorld == null) {
            tessellator9.startDrawingQuads();
            tessellator9.setColorOpaque_I(2105376);
            tessellator9.addVertexWithUV((float)this.left, (float)this.bottom, 0.0f, this.left / float10, (this.bottom + this.amountScrolled) / float10);
            tessellator9.addVertexWithUV((float)this.right, (float)this.bottom, 0.0f, this.right / float10, (this.bottom + this.amountScrolled) / float10);
            tessellator9.addVertexWithUV((float)this.right, (float)this.top, 0.0f, this.right / float10, (this.top + this.amountScrolled) / float10);
            tessellator9.addVertexWithUV((float)this.left, (float)this.top, 0.0f, this.left / float10, (this.top + this.amountScrolled) / float10);
            tessellator9.draw();
        }
        for (int i = 0; integer11 < list5.size() - 6; ++integer11) {
            int integer12 = this.width / 2 - 75 + integer11 % 2 * 160;
            int integer13 = 40 + 24 * (integer11 >> 1) - this.amountScrolled;
            GuiButton guiButton14 = this.controlList.get(integer11);
            Minecraft minecraft15 = this.mc;
            GuiButton guiButton16 = guiButton14;
            guiButton14.yPosition = integer13;
            if (guiButton14.yPosition > this.bottom || guiButton14.yPosition + 20 < this.top) {
                guiButton14.enabled = false;
            }
            else {
                guiButton14.enabled = true;
            }
            if (guiButton14.visible) {
                FontRenderer fontRenderer17 = minecraft15.fontRenderer;
                GL11.glBindTexture(3553, minecraft15.renderEngine.getTexture("/gui/gui.png"));
                GL11.glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
                int integer18 = 1;
                boolean integer19 = xSize_lo >= guiButton16.xPosition && integer13 >= guiButton16.yPosition && xSize_lo < guiButton16.xPosition + guiButton16.width && integer13 < guiButton16.yPosition + guiButton16.height;
                if (!guiButton16.enabled || guiButton16.enabled) {
                    integer18 = 0;
                }
                else if (integer19) {
                    integer18 = 2;
                }
                guiButton16.drawTexturedModalRect(guiButton16.xPosition, guiButton16.yPosition, 0, 46 + integer18 * 20, guiButton16.width / 2, guiButton16.height);
                guiButton16.drawTexturedModalRect(guiButton16.xPosition + guiButton16.width / 2, guiButton16.yPosition, 200 - guiButton16.width / 2, 46 + integer18 * 20, guiButton16.width / 2, guiButton16.height);
                guiButton16.mouseDragged(this.mc, integer12, integer13);
                if (integer8 > 0) {
                    int integer20 = this.top + 6;
                    int integer21 = this.bottom - 6;
                    int integer22 = integer21 - integer20;
                    int integer23 = integer22 * integer22 / integer7;
                    if (integer23 < 32) {
                        integer23 = 32;
                    }
                    if (integer23 > integer22) {
                        integer23 = integer22;
                    }
                    int integer24 = this.amountScrolled * (integer22 - integer23) / integer8 + integer20;
                    if (integer24 < integer20) {
                        integer24 = integer20;
                    }
                    if (integer24 > integer21) {
                        integer24 = integer21;
                    }
                    int integer25 = this.width - 13;
                    this.drawTexturedModalRect(integer25, integer20, 236, 0, 9, 4);
                    int integer26 = 248;
                    int integer27 = 0;
                    for (int j = integer22 - 8; integer28 > 0; integer28 -= integer26) {
                        this.drawTexturedModalRect(integer25, integer20 + integer27 * integer26 + 4, 236, 4, 9, (integer28 > integer26) ? integer26 : integer28);
                        ++integer27;
                    }
                    this.drawTexturedModalRect(integer25, integer20 + integer22 - 5, 236, 252, 9, 4);
                    this.drawTexturedModalRect(integer25, integer24, 245, 0, 9, 4);
                    int integer28 = 13;
                    int integer29 = 0;
                    for (int k = integer23 - 8; k > 0; k -= integer28) {
                        this.drawTexturedModalRect(integer25, integer24 + integer29 * integer28 + 4, 245, 4, 9, (k > integer28) ? integer28 : k);
                        ++integer29;
                    }
                    this.drawTexturedModalRect(integer25, integer24 + integer23 - 4, 245, 17, 9, 4);
                }
                Gui.drawStringAlt(fontRenderer17, this.options.setOptionDesc(guiButton16.id), guiButton16.xPosition, guiButton16.yPosition + (guiButton16.height - 8) / 2, 14737632);
            }
        }
        this.renderBackdrop(0, this.top, 255, 255);
        this.renderBackdrop(this.bottom, this.height, 255, 255);
        super.drawScreen(xSize_lo, ySize_lo);
        int integer11 = 4;
        GL11.glEnable(3042);
        GL11.glBlendFunc(770, 771);
        GL11.glDisable(3008);
        GL11.glShadeModel(7425);
        GL11.glDisable(3553);
        GL11.glBegin(7);
        GL11.glColor4f(0.0f, 0.0f, 0.0f, 0.0f);
        GL11.glVertex2f((float)this.left, (float)(this.top + integer11));
        GL11.glVertex2f((float)this.right, (float)(this.top + integer11));
        GL11.glColor4f(0.0f, 0.0f, 0.0f, 1.0f);
        GL11.glVertex2f((float)this.right, (float)this.top);
        GL11.glVertex2f((float)this.left, (float)this.top);
        GL11.glEnd();
        GL11.glBegin(7);
        GL11.glColor4f(0.0f, 0.0f, 0.0f, 1.0f);
        GL11.glVertex2f((float)this.left, (float)this.bottom);
        GL11.glVertex2f((float)this.right, (float)this.bottom);
        GL11.glColor4f(0.0f, 0.0f, 0.0f, 0.0f);
        GL11.glVertex2f((float)this.right, (float)(this.bottom - integer11));
        GL11.glVertex2f((float)this.left, (float)(this.bottom - integer11));
        GL11.glEnd();
        GL11.glEnable(3553);
        GL11.glShadeModel(7424);
        GL11.glEnable(3008);
        GL11.glDisable(3042);
        Gui.drawCenteredString(this.fontRenderer, this.screenTitle, this.width / 2, 12, 16777215);
    }
    
    public void renderBackdrop(int integer2, int integer3, int integer4, int integer5) {
        Tessellator tessellator6 = Tessellator.instance;
        GL11.glBindTexture(3553, this.mc.renderEngine.getTexture("/dirt.png"));
        GL11.glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
        float float7 = 32.0f;
        tessellator6.startDrawingQuads();
        tessellator6.setColorOpaque_I(4210752);
        GL11.glColor4f(0.25f, 0.25f, 0.25f, integer5 / 255.0f);
        tessellator6.addVertexWithUV(0.0f, (float)integer3, 0.0f, 0.0f, integer3 / float7);
        tessellator6.addVertexWithUV((float)this.width, (float)integer3, 0.0f, this.width / float7, integer3 / float7);
        GL11.glColor4f(0.25f, 0.25f, 0.25f, integer4 / 255.0f);
        tessellator6.addVertexWithUV((float)this.width, (float)integer2, 0.0f, this.width / float7, integer2 / float7);
        tessellator6.addVertexWithUV(0.0f, (float)integer2, 0.0f, 0.0f, integer2 / float7);
        tessellator6.draw();
        GL11.glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
    }
}
